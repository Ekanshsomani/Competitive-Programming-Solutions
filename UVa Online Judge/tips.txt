SET PATH=D:\Programs\mingw64\bin;%PATH%

- getline(cin, line)
- cin.ignore()
- KISS Principle - Keep it short and simple
- Don't overcomplicate your code. If something isn't needed, don't do it. It might lead to more problems 
than solutions.

- Bitmask:
    - (x & 1): bool for x is odd (LSB comparison)
    - left shift (<<) and right shift (>>)
    - int c = 1 << n; - shifts 1 left n times in bits (& stores it in c).(This sets value of c as 2^n)
    - S |= (1<<j): turn on jth bit
    - S &= ~(1<<j): tun off jth bit
    - S ^= (1<<j): flip the jth bit
    - T = S & (1<<j): check if jth bit of S is on;
    - T = (S&(-S)): least significant bit that is on;
    - S = (1<<n)-1: get a set of size n with all bits on
- Always try to avoid division operator (error becomes large as numbers become large)

- Tips for making complete-search cases work:
    - Try Generating instead of Filtering
        - Generating - Pruning and proceeding further into the loop with only the workable ones
        - Filtering - Proceed with all filter at the end
    - Prune early
    - Utilize symmetries - Complex Code, only use if necessary
    - Pre-Compute or calculate
    - Try solving problem backward (different angle than they want you to see)
    - Optimize source code: (only if you are on borderline of TLE)
        - C/C++ users: use scanf/printf;
        - Java:
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
            // speedup
            // Note: String splitting and/or input parsing is needed afterwards
            PrintWriter pr = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));
            // speedup
            // PrintWriter allows us to use the pr.printf() function
            // do not forget to call pr.close() before exiting your Java program
        
        - use quicksort instead of heapsort
        - Access 2D array in row major fashion
        - bitmasking in integer >>>> bitset >> vector<bool>
        - C++: if possible, use array instead of vectors, 32-bit ints instead of 64-bit ints.
        - Java: use ArrayList and stringbuilder rather than vector and stringbuffer
        - Declare most data structure in global scope
        - iterative > recursive (because of overheads in function calls)
    - If you have an array A and you frequently access the value of A[i] (without changing it) 
    in (nested) loops, it may be beneficial to use a local variable temp = A[i] and works with 
    temp instead.
    - usage of macros or inline functions can reduce runtime
    - Java stringbuilder > java string
    - C style char array > c++ string

Super-star problems with awesome application of concepts:
    - 11195 - nQueens

Problems Left:
    - ahoy,Pirates
    - back to the 8 queens
    - 10475 - Help the Leaders

To-Do:
    - Complete resume tonight
    - Maybe solve some Problems?